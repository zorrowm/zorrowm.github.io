import{j as _}from"./xframelib-exp-CvTEfE5n.js";import{as as y,at as d,au as f}from"./vendor-CDV5M84i.js";import{d as C,v,x as P}from"./@vue-exp-YaP0LnBg.js";import{_ as g}from"./index-urNJi4nj.js";import"./axios-exp-BH40TtQM.js";import"./@hprose-exp-DifMA6AO.js";import"./vue-router-exp-BeFgxScw.js";const h=C({__name:"DynamicPolylineVolumeWidget",setup(l,{expose:n}){n();function o(){const e=_.CesiumViewer;e.scene.postProcessStages.fxaa.enabled=!0;var i=e.scene;function p(a){for(var m=[],t=0;t<360;t++){var u=Cesium.Math.toRadians(t);m.push(new Cesium.Cartesian2(a*Math.cos(u),a*Math.sin(u)))}return m}var s=new Cesium.PolylineVolumeGeometry({polylinePositions:Cesium.Cartesian3.fromDegreesArray([-85,32,-85,36,-89,36]),vertexFormat:Cesium.VertexFormat.POSITION_NORMAL_AND_ST,shapePositions:p(6e3),cornerType:Cesium.CornerType.MITERED});const c=y(f.PolylineVolumeFlow,{color:d.YELLOW,percent:.1,gradient:.2,speed:5});i.primitives.add(new Cesium.Primitive({geometryInstances:new Cesium.GeometryInstance({geometry:s}),appearance:new Cesium.MaterialAppearance({material:c})})),e.camera.flyToBoundingSphere(Cesium.PolylineVolumeGeometry.createGeometry(s).boundingSphere)}v(()=>{o()}),P(()=>{});const r={init:o};return Object.defineProperty(r,"__isScriptSetup",{enumerable:!1,value:!0}),r}});function w(l,n,o,r,e,i){return null}const I=g(h,[["render",w],["__file","DynamicPolylineVolumeWidget.vue"]]);export{I as default};
